buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:latest.release'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:latest.release'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'android-maven'
apply plugin: 'com.jfrog.bintray'

version = "2.1.3"
group = "com.tencent.bugly"

def buglyJar = "lib/bugly_${version}_release.jar"
def newBuglyJar = "lib/bugly_crash_release__${version}.jar"

android {
    compileSdkVersion 19
    buildToolsVersion '22.0.1'
    resourcePrefix "crashreport__"
    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    repositories {
        jcenter()
    }
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

def siteUrl = "https://github.com/BuglyDevTeam/Bugly-Android"
def gitUrl = "https://github.com/BuglyDevTeam/Bugly-Android.git"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.project {
            packaging 'aar'
            // Add your description here
            description = "Crash reporter for android application"
            name 'CrashReport for Android'
            url siteUrl
            // Set your license
            licenses {
                license {
                    name = 'The Bugly Software License, Version 1.0'
                    url 'http://bugly.qq.com/licenses/LICENSE-1.0.txt'
                }
            }
            developers {
                developer {
                    id 'jalenchen'
                    name 'wenkechen'
                    email 'jalenchen@qq.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task cleanEnv << {
    println "clean build dir"
    File buildDir = new File("$projectDir/build/")
    if (buildDir.exists()) {
        buildDir.deleteDir()
    }
}

task unJarToClasses(type: Copy, dependsOn: cleanEnv) {
    from zipTree(newBuglyJar)
    exclude 'META-INF'
    into 'build/intermediates/classes/release'
}

preBuild.dependsOn unJarToClasses

task sourcesJar(type: Jar) {
    from zipTree(newBuglyJar)
    exclude 'META-INF'
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    source = 'src/main/java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']

    pkg {
        repo = "maven"
        name = "CrashReport"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        version {
          gpg {
              sign = true // Determines whether to GPG sign the files. The default is false
              passphrase = properties.getProperty("bintray.gpg.password") // Optional. The passphrase for GPG signing'
          }
//            mavenCentralSync {
//                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = properties.getProperty("bintray.oss.user") //OSS user token
//                password = properties.getProperty("bintray.oss.password") //OSS user password
//            }
        }
    }
}